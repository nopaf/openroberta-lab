define(["require", "exports"], function (require, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var CONST = {
        ARG1: 'arg1',
        ARG2: 'arg2',
        EXPR: 'expr',
        VALUE: 'value',
        OP: 'op',
        LEFT: 'left',
        RIGHT: 'right',
        ENTER: 'enter',
        DOWN: 'down',
        UP: 'up',
        ANY: 'any',
        ESCAPE: 'escape',
        SHAKE: 'shake',
        FREEFALL: 'freefall',
        FACE_UP: 'face_up',
        FACE_DOWN: 'face_down',
        BINARY: 'Binary',
        UNARY: 'Unary',
        VAR: 'Var',
        TYPE: 'type',
        NAME: 'name',
        STMT: 'stmt',
        PARAMETERS: 'parameters',
        FUNCTION_DECLARATION: 'functionDeclaration',
        VAR_DECLARATION: 'VarDeclaration',
        SINGLE_FUNCTION: 'SingleFunction',
        MATH_RAIN_FUNCTION: 'MathrainFunct',
        RANDOM_INT: 'randInt',
        RANDOM_DOUBLE: 'randDouble',
        RANDOM: 'random',
        ASSIGN_STMT: 'AssignStmt',
        ASSIGN_METHOD_PARAMETER_STMT: 'AssignMethodParameter',
        REPEAT_STMT: 'RepeatStmt',
        IF_STMT: 'IfStatement',
        WAIT_STMT: 'WaitStmt',
        MATH_CONST: 'createMathConstant',
        SHOW_TEXT_ACTION: 'ShowTextAction',
        SHOW_PICTURE_ACTION: 'ShowPictureAction',
        DISPLAY_IMAGE_ACTION: 'DisplayImageAction',
        CLEAR_DISPLAY_ACTION: 'ClearDisplay',
        CREATE_DEBUG_ACTION: 'CreateDebugAction',
        TONE_ACTION: 'ToneAction',
        FREQUENCY: 'frequency',
        DURATION: 'duration',
        GET_VOLUME: 'GetVolume',
        SET_VOLUME_ACTION: 'SetVolumeAction',
        VOLUME: 'volume',
        IMAGE: 'image',
        IMAGE_SHIFT_ACTION: 'ImageShiftAction',
        IMAGE_INVERT_ACTION: 'ImageInvertAction',
        DIRECTION: 'direction',
        PLAY_FILE_ACTION: 'PlayFileAction',
        SET_LANGUAGE_ACTION: 'SetLanguageAction',
        SAY_TEXT_ACTION: 'SayTextAction',
        LANGUAGE: 'language',
        PITCH: 'pitch',
        FILE: 'file',
        TEXT: 'text',
        CHARACTER: 'character',
        TEXT_APPEND: 'textAppend',
        PICTURE: 'picture',
        X: 'x',
        Y: 'y',
        N: 'n',
        MATH_PROP_FUNCT: 'MathPropFunct',
        WAIT_TIME_STMT: 'WaitTimeSTMT',
        TIME: 'time',
        LIST: 'list',
        STMT_LIST: 'stmtList',
        DRIVE_ACTION: 'DriveAction',
        CURVE_ACTION: 'CurveAction',
        TURN_LIGHT: 'turnLight',
        TURN_ACTION: 'TurnAction',
        STOP_DRIVE: 'stopDrive',
        DRIVE_DIRECTION: 'driveDirection',
        TURN_DIRECTION: 'turnDirection',
        SPEED: 'speed',
        SPEED_L: 'speedL',
        SPEED_R: 'speedR',
        DISTANCE: 'distance',
        PRESENCE: 'presence',
        SEEK: 'presence',
        RESET: 'reset',
        GET_SAMPLE: 'GetSample',
        SENSOR_TYPE: 'sensorType',
        SENSOR_MODE: 'sensorMode',
        THEN_LIST: 'thenList',
        ELSE_STMTS: 'elseStmts',
        EXPR_LIST: 'exprList',
        STATEMENTS: 'statements',
        TOUCH: 'touch',
        INFRARED: 'infrared',
        ULTRASONIC: 'ultrasonic',
        GYRO: 'gyro',
        SOUND: 'sound',
        BUTTONS: 'buttons',
        RATE: 'rate',
        NUM_CONST: 'NumConst',
        BOOL_CONST: 'BoolConst',
        STRING_CONST: 'StringConst',
        IMAGE_CONST: 'image',
        ANIMATION: 'animation',
        STRING: 'STRING',
        BOOLEAN: 'BOOLEAN',
        NUMBER: 'NUMBER',
        NULL_CONST: 'null',
        LOOP_NUMBER: 'loopNumber',
        TERNARY_EXPR: 'createTernaryExpr',
        NUMERIC: 'Numeric',
        ARRAY_NUMBER: 'Array_Number',
        ARRAY_STRING: 'Array_String',
        ARRAY_BOOLEAN: 'Array_Boolean',
        ARRAY_COLOR: 'Array_Colour',
        ARRAY_IMAGE: 'Array_Image',
        CONTINUE: 'continue',
        BREAK: 'break',
        FLOW_CONTROL: 'flowControl',
        ADD: 'ADD',
        MINUS: 'MINUS',
        POWER: 'POWER',
        DIVIDE: 'DIVIDE',
        MULTIPLY: 'MULTIPLY',
        LT: 'LT',
        GT: 'GT',
        EQ: 'EQ',
        NEQ: 'NEQ',
        IN: 'in',
        GTE: 'GTE',
        LTE: 'LTE',
        OR: 'OR',
        AND: 'AND',
        NEG: 'NEG',
        MOD: 'MOD',
        MIN: 'min',
        MAX: 'max',
        AVERAGE: 'average',
        MEDIAN: 'median',
        MODE: 'mode',
        STD_DEV: 'stdDev',
        FOREWARD: 'FOREWARD',
        BACKWARD: 'BACKWARD',
        WHILE: 'WHILE',
        UNTIL: 'UNTIL',
        FOREVER: 'FOREVER',
        FOR: 'FOR',
        FOR_EACH: 'forEach',
        MATH_CHANGE: 'mathChange',
        NOT: 'NOT',
        ANGLE: 'angle',
        COLOR: 'color',
        COLOUR: 'colorValue',
        LED_COLOR_CONST: 'ledColor',
        RGB_COLOR_CONST: 'rgbColor',
        LED_ON_ACTION: 'ledOnAction',
        GREEN: 'GREEN',
        RED: 'red',
        ANIMATION: 'animation',
        SUM: 'sum',
        RGB: 'rgb',
        ORANGE: 'ORANGE',
        ON: 'ON',
        OFF: 'OFF',
        FLASH: 'FLASH',
        DOUBLE_FLASH: 'DOUBLE_FLASH',
        STATUS_LIGHT_ACTION: 'statusLightAction',
        AMBIENTLIGHT: 'ambientlight',
        DISPLAY_TEXT_ACTION: 'displayTextAction',
        BRIGHTNESS: 'brightness',
        PIXEL: 'pixel',
        DISPLAY_SET_BRIGHTNESS_ACTION: 'displaySetBrightnessAction',
        DISPLAY_SET_PIXEL_ACTION: 'displaySetPixelAction',
        DISPLAY_GET_BRIGHTNESS_ACTION: 'displayGetBrightnessAction',
        DISPLAY_GET_PIXEL_ACTION: 'displayGetPixelAction',
        TIMES: 'TIMES',
        SIZE: 'size',
        CREATE_LIST_IS_EMPTY: 'isListEmpty',
        CREATE_LIST_LENGTH: 'listLength',
        CREATE_LIST_WITH_ITEM: 'createCreateListWithItem',
        CREATE_LIST_FIND_ITEM: 'createListFindItem',
        COLOR_CONST: 'COLOR_CONST',
        PILOT: 'pilot',
        MOTOR_LEFT: 'C',
        MOTOR_RIGHT: 'B',
        MOTOR_XA: 'XA',
        MOTOR_XB: 'XB',
        MOTOR_XAB: 'XAB',
        MOTOR_SIDE: 'motorSide',
        MOTOR_ON_ACTION: 'motorOnAction',
        MOTOR_GET_POWER: 'motorGetPowerAction',
        MOTOR_SET_POWER: 'motorSetPowerAction',
        ENCODER_SENSOR_RESET: 'encoderSensorReset',
        ENCODER_SENSOR_SAMPLE: 'encoderSensorSample',
        GET_GYRO_SENSOR_SAMPLE: 'gyroSensorSample',
        MOTOR_STOP: 'motorStop',
        MOTOR_MOVE_MODE: 'motorMoveMode',
        MOTOR_DURATION: 'motorDuration',
        MOTOR_DURATION_VALUE: 'motorDurationValue',
        ROTATIONS: 'ROTATIONS',
        ROTATION: 'ROTATION',
        DEGREE: 'DEGREE',
        POSITION: 'position',
        FIRST: 'first',
        LAST: 'last',
        FROM_START: 'fromStart',
        FROM_END: 'fromEnd',
        GET: 'get',
        SET: 'set',
        REMOVE: 'remove',
        GET_REMOVE: 'getRemove',
        ITEM: 'item',
        CREATE_LISTS_SET_INDEX: 'createListsSetIndex',
        CREATE_LISTS_GET_INDEX: 'createListsGetIndex',
        CREATE_LISTS_GET_INDEX_STMT: 'createListsGetIndexStmt',
        CREATE_LISTS_GET_SUBLIST: 'createGetSubList',
        GYRO_SENSOR_RESET: 'createResetGyroSensor',
        TIMER_SENSOR_RESET: 'createResetTimer',
        METHOD_VOID: 'createMethodVoid',
        METHOD_RETURN: 'createMethodReturn',
        IF_RETURN: 'createMethodIfReturn',
        RETURN_TYPE: 'returnType',
        METHOD_CALL_VOID: 'createMethodCallVoid',
        METHOD_CALL_RETURN: 'createMethodCallReturn',
        TEXT_JOIN: 'createTextJoin',
        LIGHT_ACTION: 'lightSensorAction',
        WHERE1: 'where1',
        WHERE2: 'where2',
        AT1: 'at1',
        AT2: 'at2',
        RETURN: 'return',
        VALUES: 'values',
        INSERT: 'insert',
        LIGHT: 'light',
        BUTTON_A: 'A',
        BUTTON_B: 'B',
        COMMENT: 'comment',
        COMPASS: 'compass',
        GESTURE: 'gesture',
        TEMPERATURE: 'temperature',
        ANALOG: 'analog',
        DIGITAL: 'digital',
        PIN_TOUCH_SENSOR: 'createPinTouchSensor',
        PIN_GET_VALUE_SENSOR: 'createPinGetValueSensor',
        PIN_WRITE_VALUE_SENSOR: 'createPinWriteValueSensor',
        NOOP_STMT: 'createNoopStmt',
        PIN: 'pin',
        ASSERT_STMT: 'createAssertStmt',
        TEST: 'test',
        CONSOLE_DEBUG: 'createConsoleDebugAction',
        COLOR_ENUM: {
            NONE: 'NONE',
            BLACK: 'BLACK',
            BLUE: 'BLUE',
            GREEN: 'GREEN',
            YELLOW: 'YELLOW',
            RED: 'RED',
            WHITE: 'WHITE',
            BROWN: 'BROWN',
        },
        TIMER: 'timer',
        MATH_ON_LIST: 'createMathOnList',
        TRACKWIDTH: 40,
        TURN_RATIO: 40 / 3 / 2.8,
        WHEEL_DIAMETER: 5.6,
        MAXDIAG: 2500,
        MAXPOWER: 0.351858377 * 3,
        ENC: 360.0 / (3.0 * Math.PI * 5.6),
        MAX_WIDTH: 2000,
        MAX_HEIGHT: 820,
        WAVE_LENGTH: 60,
        DEBUG_BREAKPOINT: 'DebugBreakpoint',
        DEBUG_STEP_INTO: 'DebugStepInto',
        DEBUG_STEP_OVER: 'DebugStepOver',
        MIN_SIZE_OBJECT: 10,
        CORNER_RADIUS: 5,
    };
    exports.default = CONST;
});
//# sourceMappingURL=data:application/json;base64,